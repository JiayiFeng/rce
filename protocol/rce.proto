syntax = "proto3";
package protocol;

option go_package = "github.com/reyoung/rce/protocol";

message WindowSize {
  uint32 row = 1;
  uint32 col = 2;
}

message SpawnRequest {
  message File {
    string filename = 1;
    bytes content = 2;
    bool executable = 3;
    bool truncate = 4;
  }

  message Head {
    string command = 1;
    repeated string args = 2;

    message Env {
      string key = 1;
      string value = 2;
    }
    repeated Env envs = 3;

    bool has_stdin = 4;

    string path = 5;

    bool allocate_pty = 6;
    WindowSize window_size = 7;
  }

  message Start {}

  message Stdin {
    bytes stdin = 1;
  }

  oneof payload {
    File file = 1;
    Head head = 2;
    Stdin stdin = 3;
    Start start = 4;
  }
}

message PID {
  string id = 1;
}

message SpawnResponse {
  message Stdout {
    bytes stdout = 1;
  }

  message Stderr {
    bytes stderr = 1;
  }

  message Exit {
    int32 code = 1;
  }
  message SystemError {
    string error = 1;
  }

  oneof payload {
    Stdout stdout = 1;
    Stderr stderr = 2;
    Exit exit = 3;
    PID pid = 4;
    SystemError error = 5;
  }
}

message KillResponse {
  string error = 1;
}

service RemoteCodeExecutor {
  rpc Spawn(stream SpawnRequest) returns (stream SpawnResponse) {}
  rpc Kill(PID) returns (KillResponse){}
}
